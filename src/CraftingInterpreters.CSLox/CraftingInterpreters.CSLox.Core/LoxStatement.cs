// Path: CraftingInterpreters.CSLox.Core/LoxExpression.cs
// This file was generated by the tool at CraftingInterpreters.CSLox.Tools
// Do not edit this file directly.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CraftingInterpreters.CSLox.Core;

public abstract class LoxStatement
{
	public abstract T Accept<T>(ILoxStatementVisitor<T> visitor);
}

public interface ILoxStatementVisitor<T>
{
	T VisitExpressionLoxStatement(ExpressionLoxStatement loxExpression);
	T VisitPrintLoxStatement(PrintLoxStatement loxExpression);
	T VisitVariableLoxStatement(VariableLoxStatement loxExpression);
}

public class ExpressionLoxStatement : LoxStatement
{
	public ExpressionLoxStatement(LoxExpression expression)
	{
		this.Expression = expression;
	}

	public override T Accept<T>(ILoxStatementVisitor<T> visitor)
	{
		return visitor.VisitExpressionLoxStatement(this);
	}

	public LoxExpression Expression { get; set; }

}

public class PrintLoxStatement : LoxStatement
{
	public PrintLoxStatement(LoxExpression expression)
	{
		this.Expression = expression;
	}

	public override T Accept<T>(ILoxStatementVisitor<T> visitor)
	{
		return visitor.VisitPrintLoxStatement(this);
	}

	public LoxExpression Expression { get; set; }

}

public class VariableLoxStatement : LoxStatement
{
	public VariableLoxStatement(Token name, LoxExpression initializer)
	{
		this.Name = name;
		this.Initializer = initializer;
	}

	public override T Accept<T>(ILoxStatementVisitor<T> visitor)
	{
		return visitor.VisitVariableLoxStatement(this);
	}

	public Token Name { get; set; }
	public LoxExpression Initializer { get; set; }

}


